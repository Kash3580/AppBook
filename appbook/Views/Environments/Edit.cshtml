@model MVCdemo.Models.Environment

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Environment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EnvID)

        
  <div class="form-group">
            @Html.LabelFor(model => model.ArchDiagramPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @if (ViewBag.Redirected == true)
                {  
                   @Html.LabelFor(model => model.ArchDiagramPath,  Session["filepath"].ToString()) 

                     @Html.ActionLink("View", "DisplayFile", "FileUpload", new { filename = (string)@ViewBag.Filepath },htmlAttributes:new {@target="_blank" } )
                    @*@Html.EditorFor(model => model.ArchDiagramPath, new { htmlAttributes = new { @Value = (string)@ViewBag.Filepath } })*@
                    
                }
                else
                {
                   
                    @Html.ActionLink("Upload File", "UploadFile", "FileUpload",new {editid = ViewBag.Editid, reqType = "Edit" },null)
                }
              
            </div>
        </div>
 
        <div class="form-group">
            @Html.LabelFor(model => model.EnvType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EnvType, (List<SelectListItem>)ViewBag.EnvTypeDL, htmlAttributes: new { @class = "form-control" })


                @Html.ValidationMessageFor(model => model.EnvType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppId, "AppId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AppId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AppId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { app_id = Model.AppId, env = Model.EnvType })
</div>
